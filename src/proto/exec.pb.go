// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.6
// source: exec.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExecRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecRequest) Reset() {
	*x = ExecRequest{}
	mi := &file_exec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecRequest) ProtoMessage() {}

func (x *ExecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecRequest.ProtoReflect.Descriptor instead.
func (*ExecRequest) Descriptor() ([]byte, []int) {
	return file_exec_proto_rawDescGZIP(), []int{0}
}

func (x *ExecRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type ExecResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stdout        string                 `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr        string                 `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	ExitCode      int32                  `protobuf:"varint,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecResponse) Reset() {
	*x = ExecResponse{}
	mi := &file_exec_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecResponse) ProtoMessage() {}

func (x *ExecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exec_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecResponse.ProtoReflect.Descriptor instead.
func (*ExecResponse) Descriptor() ([]byte, []int) {
	return file_exec_proto_rawDescGZIP(), []int{1}
}

func (x *ExecResponse) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *ExecResponse) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

func (x *ExecResponse) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

var File_exec_proto protoreflect.FileDescriptor

const file_exec_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"exec.proto\x12\x05proto\"!\n" +
	"\vExecRequest\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\"[\n" +
	"\fExecResponse\x12\x16\n" +
	"\x06stdout\x18\x01 \x01(\tR\x06stdout\x12\x16\n" +
	"\x06stderr\x18\x02 \x01(\tR\x06stderr\x12\x1b\n" +
	"\texit_code\x18\x03 \x01(\x05R\bexitCode2A\n" +
	"\vExecService\x122\n" +
	"\aExecute\x12\x12.proto.ExecRequest\x1a\x13.proto.ExecResponseB\x19Z\x17go.mocker.com/src/protob\x06proto3"

var (
	file_exec_proto_rawDescOnce sync.Once
	file_exec_proto_rawDescData []byte
)

func file_exec_proto_rawDescGZIP() []byte {
	file_exec_proto_rawDescOnce.Do(func() {
		file_exec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_exec_proto_rawDesc), len(file_exec_proto_rawDesc)))
	})
	return file_exec_proto_rawDescData
}

var file_exec_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_exec_proto_goTypes = []any{
	(*ExecRequest)(nil),  // 0: proto.ExecRequest
	(*ExecResponse)(nil), // 1: proto.ExecResponse
}
var file_exec_proto_depIdxs = []int32{
	0, // 0: proto.ExecService.Execute:input_type -> proto.ExecRequest
	1, // 1: proto.ExecService.Execute:output_type -> proto.ExecResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_exec_proto_init() }
func file_exec_proto_init() {
	if File_exec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_exec_proto_rawDesc), len(file_exec_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_exec_proto_goTypes,
		DependencyIndexes: file_exec_proto_depIdxs,
		MessageInfos:      file_exec_proto_msgTypes,
	}.Build()
	File_exec_proto = out.File
	file_exec_proto_goTypes = nil
	file_exec_proto_depIdxs = nil
}
